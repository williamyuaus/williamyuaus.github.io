<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Spring Boot - Category - William Yu</title><link>https://williamyuaus.com/categories/spring-boot/</link><description>Spring Boot - Category - William Yu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>williamyuaus@gmail.com (William Yu)</managingEditor><webMaster>williamyuaus@gmail.com (William Yu)</webMaster><lastBuildDate>Mon, 22 Jan 2024 10:43:32 +1100</lastBuildDate><atom:link href="https://williamyuaus.com/categories/spring-boot/" rel="self" type="application/rss+xml"/><item><title>Fix the Error of Null Value for Field With @Creationtimestamp</title><link>https://williamyuaus.com/2024/01/fix-the-error-of-null-value-for-field-with-creationtimestamp/</link><pubDate>Mon, 22 Jan 2024 10:43:32 +1100</pubDate><author>William Yu</author><guid>https://williamyuaus.com/2024/01/fix-the-error-of-null-value-for-field-with-creationtimestamp/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://raw.githubusercontent.com/williamyuaus/blog-img/master/img/202401221050208.png" referrerpolicy="no-referrer">
            </div>Background In a Spring Boot project, an entity class has a @CreationTimestamp annotation for the field of started. Since this field is essential for our business logic, there is a NotNull restriction in the database column for it.
This is the code for this entity (Review.java):
@Entity(name = &#34;review&#34;) @EqualsAndHashCode(onlyExplicitlyIncluded = true) @TypeDef(name = &#34;jsonb&#34;, typeClass = JsonBinaryType.class) @TypeDef(name = &#34;pgsql_enum&#34;, typeClass = PostgreSQLEnumType.class) @Getter @Setter @JsonIgnoreProperties({&#34;hibernateLazyInitializer&#34;, &#34;handler&#34;}) public class Review { @Id @EqualsAndHashCode.]]></description></item><item><title>Fix Generating Equals/hashcode Implementation but Without a Call to Superclass</title><link>https://williamyuaus.com/2022/08/fix-generating-equalshashcode-implementation-but-without-a-call-to-superclass/</link><pubDate>Mon, 15 Aug 2022 18:40:03 +1000</pubDate><author>William Yu</author><guid>https://williamyuaus.com/2022/08/fix-generating-equalshashcode-implementation-but-without-a-call-to-superclass/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://raw.githubusercontent.com/williamyuaus/blog-img/master/img/202208151849632.png" referrerpolicy="no-referrer">
            </div><h2 id="the-warning-from-building-a-spring-boot-project">The warning from building a Spring Boot project</h2>
<p>When I built my Spring boot project, I got 20 warnings about a same thing. The warning shows: <code>Generating equals/hashCode implementation but without a call to superclass</code></p>
<p></p>]]></description></item><item><title>How to Deploy a Spring Boot and Vue Application on AWS EC2 Using Docker</title><link>https://williamyuaus.com/2021/08/how-to-deploy-a-spring-boot-and-vue-application-on-aws-ec2-using-docker/</link><pubDate>Sat, 28 Aug 2021 15:25:05 +1000</pubDate><author>William Yu</author><guid>https://williamyuaus.com/2021/08/how-to-deploy-a-spring-boot-and-vue-application-on-aws-ec2-using-docker/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://raw.githubusercontent.com/williamyuaus/blog-img/master/20210826214826.png" referrerpolicy="no-referrer">
            </div><h2 id="intro">Intro</h2>
<p>To develop a single-page application, Spring Boot and Vue can be a good choice. When you finished the development stage, it is time to deploy the app online.</p>
<p>Traditionally, you may need to write scripts to start your java service, and you need to do a lot of configuration for the Nginx server.</p>
<p>To make the process easier and more efficient, I would recommend using Docker to deploy the app. You may find it a little bit difficult to learn at the beginning, but you will benefit from the learning since Docker could help you a lot.</p>]]></description></item></channel></rss>